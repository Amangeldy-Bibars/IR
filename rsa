//  main.cpp
//  RSA
//
//  Created by Sergiy on 06.06.17.

#include <iostream>
#include <math.h>
#include <string.h>
#include <string>
#include <stdio.h>
#include <stdlib.h>


bool isPrime(long int prime);
long int calculateE( long int t );
long int greatestCommonDivisor( long int e, long int t );
long int calculateD( long int e, long int t );
long int encrypt( long int i, long int e, long int n );
long int decrypt(long int i, long int d, long int n );

int bb1=0, bb2=0, bb3=0;
void l()
{
	std::cout<<"\n----------------------------\n";
}
int main( )
{
    long int p, q, n, t, e, d;
    
    long int encryptedText[100];
    memset(encryptedText, 0, sizeof(encryptedText));
    
    long int decryptedText[100];
    memset(decryptedText, 0, sizeof(decryptedText));
    
    bool flag;
    
    std::string msg;
    
    std::cout << "RSA (Bibars)" << std::endl << std::endl;
    
    // C??????? ????????? ? ?????????? ??????
    
    // 1. ?????????? ??? ????????? ????????? ??????? ????? p ? q ????????? ???????
    
    do
    {
        std::cout << "  p engiziniz : ";
        std::cin >> p;
        flag = isPrime( p );
        
        if ( flag == false )
        {
            std::cout << "\nduris emes\n" << std::endl;
        }
    } while ( flag == false );
    
    
    do
    {
        std::cout << "  q engiziniz : " ;
        std::cin >> q;
        flag = isPrime( q );
        
        if ( flag == false )
        {
            std::cout << "\nduris emes \n" << std::endl;
        }
    } while ( flag == false);
    l();
    // 2. ??????????? ?? ???????????? n = p 路 q, ??????? ?????????? ???????.
    n = p * q;
    std::cout << "\n p = " << p; 
    std::cout << "\n q = " << q; 
    std::cout << "\n n = p*q = " << n << std::endl;
    
    // 3. ??????????? ???????? ??????? ?????? ?? ????? n: f(n) = (p-1)路(q-1)
    t = ( p - 1 ) * ( q - 1 );
    std::cout << " t = (p-1) * (q-1) = " << t << std::endl;
    l();
    // 4. ?????????? ????? ????? e ( 1 < e < f(n) ), ??????? ??????? ?? ????????? ??????? ?????? (t)
    //	  ????? e ?????????? ???????? ???????????
    e = calculateE( t );
    
    // 5. ??????????? ????? d, ???????????????? ???????? ? ????? e ?? ?????? f(n), ?? ???? ?????, ??????????????? ?????????:
    //    d 路 e = 1 (mod f(n))
    d = calculateD( e, t );
    
    std::cout << "\n e = " << e; 
    std::cout << "\n d = " << d<<std::endl; 
    l();
    // 6. ???? {e, n} ??????????? ? ???????? ????????? ????? RSA
    std::cout << "\n RSA ashik kilt  (n = " << n << ", e = " << e << ")" << std::endl;
    
    // 7. ???? {d, n} ?????? ???? ????????? ????? RSA ? ???????? ? ???????
    std::cout << " RSA zhabik kilt  (n = " << n << ", d = " << d << ")" << std::endl;
    
    l();
    
    std::cout << "\n Soobshenie enginiz : " ;
    
    // there is a newline character left in the input stream, so we use ignore()
    std::cin.ignore();
    
    std::getline( std::cin, msg );
    l();
    std::cout << "\nSoobshenie : \n" << msg << std::endl;
    
    
    // encryption
    
    for (long int i = 0; i < msg.length(); i++)
    {
        encryptedText[i] = encrypt( msg[i], e, n);
    }
    
    std::cout << "\nShifrlangan soobshenie (ASCII):" << std::endl;
    
    for ( long int i = 0; i < msg.length(); i++ )
    {
        printf( "%i ", ((int)encryptedText[i] + 65));
    }
    
     std::cout << "\n\nShifrlangan soobshenie (int):" << std::endl;
    
    for ( long int i = 0; i < msg.length(); i++ )
    {
        printf( "%i ", (int)encryptedText[i] );
    }
    
    
    l();
    
    //decryption
    
    for (long int i = 0; i < msg.length(); i++)
    {
        decryptedText[i] = decrypt(encryptedText[i], d, n);
    }
    
    std::cout << "\nDeshifrlangan soobshenie (int): " << std::endl;
    
    for (long int i = 0; i < msg.length(); i++)
    {
        printf( "%i ", ((int)decryptedText[i] - 65) );
    }
    
     std::cout << "\n\nDeshifrlangan soobshenie (ASCII): " << std::endl;
    
    for (long int i = 0; i < msg.length(); i++)
    {
        printf( "%i ", (int)decryptedText[i] );
    }
    
    
    l();
    std::cout << "\nDeshifrlangan soobshenie (char): " << std::endl;
    
    for (long int i = 0; i < msg.length(); i++)
    {
        printf( "%c", (char)decryptedText[i] );
    }
    
   
    
    
    std::cout << std::endl << std::endl;
    
    //system("PAUSE");
    
    return 0;
}

bool isPrime( long int prime)
{
    long int i, j;
    
    j = (long int)sqrt((long double)prime);
    
    for ( i = 2; i <= j; i++)
    {
        if ( prime % i == 0 )
        {
            return false;
        }
    }
    
    return true;
}

long int calculateE( long int t )
{
    // ?????????? ????? ????? e ( 1 < e < t ) // ??????? ??????? ?? ????????? ??????? ?????? (t)
    
    long int e;
    
    for ( e = 2; e < t; e++ )
    {
        if (greatestCommonDivisor( e, t ) == 1 )
        {
            return e;
        }
    }
    
    return -1;
}

long int greatestCommonDivisor( long int e, long int t )
{
    while ( e > 0 )
    {
        long int myTemp;
        
        myTemp = e;
        e = t % e;
        t = myTemp;
    }
    
    return t;
}

long int calculateD( long int e, long int t)
{
    // ??????????? ????? d, ???????????????? ???????? ? ????? e ?? ?????? f(n), ?? ???? ?????, ??????????????? ?????????:
    //    d 路 e = 1 (mod f(n))
    
    long int d;
    long int k = 1;
    
    while ( 1 )
    {
        k = k + t;
        
        if ( k % e == 0)
        {
            d = (k / e);
            return d;
        }
    }
    
}


long int encrypt( long int i, long int e, long int n )
{
    long int current, result;
    bb1=0;
    bb2=0;
    bb3=0;
    if(i>64 && i<97)
    {
	    current = i - 65;
	    bb1=1;
	}
	else if(i>=48 && i<=57)
	{
		current = i - 48;
		bb3=1;	
	}
    else
	{
		current = i - 97;
		bb2=1;	
	} 
    
    result = 1;
    
    for ( long int j = 0; j < e; j++ )
    {
        result = result * current;
        result = result % n;
    }
    
    return result;
}

long int decrypt(long int i, long int d, long int n)
{
    long int current, result;
    
    current = i;
    result = 1;
    
    for ( long int j = 0; j < d; j++ )
    {
        result = result * current;
        result = result % n;
    }
    
    if(bb1==1)
    return result + 65;
    else if(bb3==1)
    return result +48;
    else
    return result + 97;
}
